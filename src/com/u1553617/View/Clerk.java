package com.u1553617.View;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class Clerk {
    private JPanel panel1;
    private JButton showAvailableRoomsButton;
    private JTable table1;
    private JButton addBookingDetailsButton;
    private JTextField textField1;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        Font panel1Font = this.$$$getFont$$$(null, -1, -1, panel1.getFont());
        if (panel1Font != null) panel1.setFont(panel1Font);
        panel1.setBorder(BorderFactory.createTitledBorder(null, "Clerk GUI", TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$(null, -1, -1, panel1.getFont()), null));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        panel1.add(panel2, BorderLayout.CENTER);
        showAvailableRoomsButton = new JButton();
        showAvailableRoomsButton.setText("Show Available Rooms");
        panel2.add(showAvailableRoomsButton, BorderLayout.WEST);
        table1 = new JTable();
        panel2.add(table1, BorderLayout.CENTER);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        panel2.add(panel3, BorderLayout.SOUTH);
        addBookingDetailsButton = new JButton();
        addBookingDetailsButton.setText("Add Booking Details");
        panel3.add(addBookingDetailsButton, BorderLayout.CENTER);
        final JLabel label1 = new JLabel();
        label1.setText("Who made Booking:");
        panel3.add(label1, BorderLayout.NORTH);
        textField1 = new JTextField();
        panel3.add(textField1, BorderLayout.WEST);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
