package com.u1553617.View;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionListener;

public class Manager {
    private JTextField roomTF;
    private JPanel panel1;
    private JButton addRoomBtn;
    private JButton viewListBtn;
    private JComboBox roomSizeCB;
    private JComboBox roomTypeCB;
    private JTable roomsTable;
    private JButton removeRoomButton;
    private JButton viewAvailabiltyOfRoomButton;
    private JButton markRoomAsUnavailableButton;
    private JTextField startTermTF;
    private JTextField endTermTF;
    private JButton submitTermDateButton;
    private JTextField timeUnavTF;
    private JTextField termDatesTF;
    private JButton viewTermDatesBtn;

    private DefaultTableModel tableModel;

    public Manager() {
        String[] header = new String[]{"Room ID", "Room Size", "Room Type", "Room Available", "Time Unavailable"};

        tableModel = new DefaultTableModel();
        tableModel.setColumnIdentifiers(header);

        roomsTable = getRoomsTable();
        getPanel().add(new JScrollPane(roomsTable));
        roomsTable.setModel(tableModel);
    }

    public void showForm() {
        JFrame frame = new JFrame("MANAGER GUI");

        frame.setContentPane(getPanel());
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(500, 500);
        frame.pack();

        frame.setVisible(true);
    }

    public JPanel getPanel() {
        return panel1;
    }

    /*
    Action Listener in Controller deals with adding room.

    public void addRoomActionListener(ActionListener addRoomAL) {
        addRoomBtn.addActionListener(addRoomAL);
    }
*/

    public JButton getViewListBtn() {
        return viewListBtn;
    }

    public JButton getAddRoomBtn() {
        return addRoomBtn;
    }

    public String getRoomId() {
        return roomTF.getText();
    }

    public String getRoomTypeCB() {
        return roomTypeCB.getSelectedItem().toString();
    }

    public Integer getRoomSizeCB() {
        String size = roomSizeCB.getSelectedItem().toString();
        return Integer.parseInt(size);
    }

    public JTable getRoomsTable() {
        return roomsTable;
    }

    public DefaultTableModel getTableModel() {
        return tableModel;
    }

    public JButton getRemoveRoomButton() {
        return removeRoomButton;
    }

    public JButton getViewAvailabiltyOfRoomButton() {
        return viewAvailabiltyOfRoomButton;
    }

    public JButton getMarkRoomAsUnavailableButton() {
        return markRoomAsUnavailableButton;
    }

    public String getTimeUnavailable() {
        return timeUnavTF.getText();
    }

    public JButton getSubmitTermDateButton() {
        return submitTermDateButton;
    }

    public String getStartTermDate() {
        return this.startTermTF.getText();
    }

    public void setStartTermDate(String startDate) {
        this.startTermTF.setText(startDate);
    }

    public String getEndTermDate() {
        return this.endTermTF.getText();
    }

    public void setEndTermDate(String endTermDate) {
        this.endTermTF.setText(endTermDate);
    }

    public JTextField getTermDatesTF() {
        return termDatesTF;
    }

    public void setTermDatesView(String dates) {
        getTermDatesTF().setText(dates);
    }

    public JButton getViewTermDatesBtn() {
        return viewTermDatesBtn;
    }

    /*
    Action Listeners in Controller*/
    public void addRoomActionListener(ActionListener addRoomAL) {
        addRoomBtn.addActionListener(addRoomAL);
    }

    public void viewListActionListener(ActionListener viewListAL) {
        viewListBtn.addActionListener(viewListAL);
    }

    public void removeRoomActionListener(ActionListener removeRoomAL) {
        removeRoomButton.addActionListener(removeRoomAL);
    }

    public void getRoomAvailActionListener(ActionListener getRoomAvailAL) {
        viewAvailabiltyOfRoomButton.addActionListener(getRoomAvailAL);
    }

    public void markRoomUnavailableActionListener(ActionListener markRoomUnavailableAL) {
        markRoomAsUnavailableButton.addActionListener(markRoomUnavailableAL);
    }

    public void viewTermDateActionListener(ActionListener viewTermDateAL) {
        viewTermDatesBtn.addActionListener(viewTermDateAL);
    }

    public void submitTermDateActionListener(ActionListener submitTermDateAL) {
        submitTermDateButton.addActionListener(submitTermDateAL);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        final JLabel label1 = new JLabel();
        label1.setText("Room ID:");
        panel1.add(label1);
        roomTF = new JTextField();
        roomTF.setColumns(5);
        roomTF.setText("");
        panel1.add(roomTF);
        final JLabel label2 = new JLabel();
        label2.setText("Room Size");
        panel1.add(label2);
        roomSizeCB = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("1");
        defaultComboBoxModel1.addElement("2");
        defaultComboBoxModel1.addElement("3");
        defaultComboBoxModel1.addElement("4");
        defaultComboBoxModel1.addElement("5");
        defaultComboBoxModel1.addElement("6");
        defaultComboBoxModel1.addElement("7");
        defaultComboBoxModel1.addElement("8");
        defaultComboBoxModel1.addElement("9");
        defaultComboBoxModel1.addElement("10");
        roomSizeCB.setModel(defaultComboBoxModel1);
        panel1.add(roomSizeCB);
        final JLabel label3 = new JLabel();
        label3.setText("Room Type");
        panel1.add(label3);
        roomTypeCB = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel2 = new DefaultComboBoxModel();
        defaultComboBoxModel2.addElement("Computer Lab");
        defaultComboBoxModel2.addElement("Tutorial Room");
        defaultComboBoxModel2.addElement("Lecture Theatre");
        roomTypeCB.setModel(defaultComboBoxModel2);
        panel1.add(roomTypeCB);
        addRoomBtn = new JButton();
        addRoomBtn.setText("Add Room");
        panel1.add(addRoomBtn);
        viewListBtn = new JButton();
        viewListBtn.setText("View List");
        panel1.add(viewListBtn);
        roomsTable = new JTable();
        panel1.add(roomsTable);
        removeRoomButton = new JButton();
        removeRoomButton.setText("Remove Room");
        panel1.add(removeRoomButton);
        viewAvailabiltyOfRoomButton = new JButton();
        viewAvailabiltyOfRoomButton.setText("View Availabilty of Room");
        panel1.add(viewAvailabiltyOfRoomButton);
        final JLabel label4 = new JLabel();
        label4.setText("Enter Time Unavailable");
        panel1.add(label4);
        timeUnavTF = new JTextField();
        timeUnavTF.setColumns(5);
        timeUnavTF.setText("1 Day");
        panel1.add(timeUnavTF);
        markRoomAsUnavailableButton = new JButton();
        markRoomAsUnavailableButton.setText("Mark Room as unavailable");
        panel1.add(markRoomAsUnavailableButton);
        final JLabel label5 = new JLabel();
        label5.setText("Start Term Date:");
        panel1.add(label5);
        startTermTF = new JTextField();
        startTermTF.setColumns(5);
        panel1.add(startTermTF);
        final JLabel label6 = new JLabel();
        label6.setText("End Term Date:");
        panel1.add(label6);
        endTermTF = new JTextField();
        endTermTF.setColumns(5);
        panel1.add(endTermTF);
        submitTermDateButton = new JButton();
        submitTermDateButton.setText("Submit Term Date");
        panel1.add(submitTermDateButton);
        final JLabel label7 = new JLabel();
        label7.setText("Current term dates:");
        panel1.add(label7);
        termDatesTF = new JTextField();
        termDatesTF.setColumns(5);
        termDatesTF.setEditable(true);
        termDatesTF.setEnabled(true);
        panel1.add(termDatesTF);
        viewTermDatesBtn = new JButton();
        viewTermDatesBtn.setText("View Term Dates");
        panel1.add(viewTermDatesBtn);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
